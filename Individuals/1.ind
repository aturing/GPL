S ::= CARDGAME
CARDGAME ::= GAME $ RANKING $ WIN
//three stages
GAME ::= STAGE : STAGE : STAGE
//stage 1
STAGE ::= RULES
//two rules
RULES ::= RULE ; RULE
//rule 1.1
RULE ::= DIRECTRULE
DIRECTRULE ::= DIRECTANTECEDENT _ DIRECTCONSEQUENT
DIRECTANTECEDENT ::= show , lambda , lambda
DIRECTCONSEQUENT ::= playit
//rule 1.2
RULE ::= DIRECTRULE
DIRECTRULE ::= DIRECTANTECEDENT _ DIRECTCONSEQUENT
DIRECTANTECEDENT ::= show , lambda , lambda
DIRECTCONSEQUENT ::= playit
//stage 2
STAGE ::= RULES
//two rules
RULES ::= RULE ; RULE
//rule 2.1
RULE ::= DIRECTRULE
DIRECTRULE ::= DIRECTANTECEDENT _ DIRECTCONSEQUENT
DIRECTANTECEDENT ::= show , lambda , lambda
DIRECTCONSEQUENT ::= playit
//rule 2.2
RULE ::= DIRECTRULE
DIRECTRULE ::= DIRECTANTECEDENT _ DIRECTCONSEQUENT
DIRECTANTECEDENT ::= show , lambda , lambda
DIRECTCONSEQUENT ::= playit
//stage 3
STAGE ::= RULES
//two rules
RULES ::= RULE ; RULE
//rule 3.1
RULE ::= DIRECTRULE
DIRECTRULE ::= DIRECTANTECEDENT _ DIRECTCONSEQUENT
DIRECTANTECEDENT ::= show , lambda , lambda
DIRECTCONSEQUENT ::= playit
//rule 3.2
RULE ::= DIRECTRULE
DIRECTRULE ::= DIRECTANTECEDENT _ DIRECTCONSEQUENT
DIRECTANTECEDENT ::= show , lambda , lambda
DIRECTCONSEQUENT ::= playit
//2 RANKS
RANKING ::= COMBINATION , POINTS ; COMBINATION , POINTS
//RANK 1
COMBINATION ::= NUMBERCOMBINATION
NUMBERCOMBINATION ::= number NUMBER
NUMBER ::= 0
POINTS ::= ZEROAMOUNT AMOUNT
ZEROAMOUNT ::= 1
AMOUNT ::= 2
//RANK 2
COMBINATION ::= NUMBERCOMBINATION
NUMBERCOMBINATION ::= number NUMBER
NUMBER ::= 1
POINTS ::= ZEROAMOUNT AMOUNT
ZEROAMOUNT ::= 2
AMOUNT ::= 3
//WIN
WIN ::= tokens * ZEROAMOUNT ; player playing * ZEROAMOUNT
ZEROAMOUNT ::= 4
ZEROAMOUNT ::= 5
//END